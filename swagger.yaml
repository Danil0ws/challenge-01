swagger: '2.0'
info:
  description: Create a cart API, written in Python + Flask + SqlLite + UnitTest.
  version: 1.0.0
  title: Technical challenge Loja Integrada! - Cart API
  contact:
    email: mydanilows@gmail.com

tags:
- name: Products
  description: Operations related to products
- name: Users
  description: Operations available to regular developers
- name: Cupons
  description: Operations available to regular developers
- name: Carts
  description: Operations available to regular developers
paths:
  /products:
    get:
      summary: Returns details of a product.
      tags:
        - Users
      responses:
        200:
          description: OK
        404:     
          description: Product not found
    post:
      summary: Returns details of a product.
      description: __
      consumes: ['application/json']
      produces: ['application/json']
      tags:
        - Users
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Products'
      responses:
        201:
          description: Product successfully created
        404:     
          description: Product not created
        405:     
          description: Validation exception
  /users:
    get:
      summary: Returns details of a users.
      tags:
        - Users
      responses:
        200:
          description: OK
        404:     
          description: OK
    post:
      summary: Creates a new user.
      tags:
        - Users
      responses:
        200:
          description: OK
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          type: integer
      responses:
        200:
          description: OK
    delete:
      summary: Deletes a user.
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          type: integer
      responses:
        200:
          description: OK
definitions:
  Products:
    type: object
    required:
    - id
    - name
    - amount
    - price
    properties:
      id:
        type: string
        format: id
      name:
        type: string
        format: text
      amount:
        type: integer
        format: number
      price:
        type: integer
        format: number
   
# host: Danil0ws.swaggerhub.com
basePath: /Danil0ws/challenge-01/1.0.0
schemes:
 - https
host: Danil0ws.swaggerhub.com